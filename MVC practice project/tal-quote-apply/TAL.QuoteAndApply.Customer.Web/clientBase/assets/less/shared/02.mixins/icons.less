// ==============================================================
// MIXINS - ICONS
// ==============================================================



/**
 * Static base styles for the :before and :after psuedos used with pe-icons.
 */
.abs-icon-pe {
	content: '';
	display: inline-block;
	&:extend(.stretch-absolute);
	background-repeat: no-repeat;
	transition: all 300ms;
}



/**
 * Allows easy override of the position and size of an icon placed with .mxn-icon-pe
 */
.mxn-icon-pe-color(
	@icon: false,
	@color-base: false,
	@color-hover: false,
	@color-active: false
) {
	& when not (@color-base = false) and not (@icon = false) {
		&:before {
			background-image: svgicon(@icon, @color-base);
		}
	}

	& when not (@color-hover = false) and not (@icon = false)  {
		&:hover, &:focus {
			&:before {
				background-image: svgicon(@icon, @color-hover);
			}
		}
	}

	& when not (@color-active = false) and not (@icon = false)  {
		&:active {
			&:before {
				background-image: svgicon(@icon, @color-active);
			}
		}
	}
}


/**
 * Allows easy override of the position and size of an icon placed with .mxn-icon-pe
 */
.mxn-icon-pe-sizes(
	@size: 20px,
	@position: center
) {
	&:before {
		background-position: @position;
		background-size: @size;
	}
}


/**
 * Mixin for including an icon with multiple states (base/hover/focus/active).
 */
.mxn-icon-pe(
	@icon: false,
	@color-base: false,
	@color-hover: false,
	@color-active: false,
	@size: 20px,
	@position: center,
	@extend: true
) {
	// At minimum, include rules for a static base icon
	position: relative;

	.mxn-icon-pe-color(@icon, @color-base, @color-hover, @color-active);
	.mxn-icon-pe-sizes(@size, @position);

	& when (@extend = true) {
		&:before {
			&:extend(.abs-icon-pe);
		}
	}
}


.mxn-hide-pe-icon {
	&:before,
	&:after {
		display: none;
		background-image: none;
	}
}


/**
 * Simplest icon mixin, which just uses background image for a one-state icon
 */
.mxn-icon(
	@icon: false, 
	@color: false, 
	@size: 20px, 
	@position: center
) {
	background-repeat: no-repeat;
	background-position: @position;
	background-size: @size;
	display: inline-block;

	& when not (@icon = false) and not (@color = false) {
		background-image: svgicon(@icon, @color);
	}
}

.mxn-icon-color(@icon: false, @color: false ) {
	& when not (@icon = false) and not (@color = false) {
		background-image: svgicon(@icon, @color);
	}
}





.icon-tal-logo-dual {
	.mxn-icon-pe(
		@icon: brand-logo,
		@color-base: @tal-green,
		@color-hover: @tal-green-hover,
		@color-active: @tal-green-dark,
		@size: 60px
	);
}

.icon-cross-dual {
	.mxn-icon-pe(
		@icon: cross,
		@color-base: tomato,
		@color-hover: darken(tomato, 15),
		@color-active: darken(tomato, 25)
	);
}

.icon-tick-dual {
	.mxn-icon-pe(
		@icon: tick,
		@color-base: skyblue,
		@color-hover: darken(skyblue, 15),
		@color-active: darken(skyblue, 25)
	);
}

.icon-plus-dual {
	.mxn-icon-pe(
		@icon: plus,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: plus,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-minus-dual {
	.mxn-icon-pe(
		@icon: minus,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: minus,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-arrow-n-dual {
	.mxn-icon-pe(
		@icon: arrow-n,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: arrow-n,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-arrow-w-dual {
	.mxn-icon-pe(
		@icon: arrow-w,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: arrow-w,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-arrow-e-dual {
	.mxn-icon-pe(
		@icon: arrow-e,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: arrow-e,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-arrow-s-dual {
	.mxn-icon-pe(
		@icon: arrow-s,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: arrow-s,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-arrow-link-e-dual {
	.mxn-icon-pe(
		@icon: arrow-e,
		@color-base: @tal-green,
		@color-hover: @grey-30,
		@color-active: @grey-10
	);

}
.icon-arrow-link-w-dual {
	.mxn-icon-pe(
		@icon: arrow-w,
		@color-base: @tal-green,
		@color-hover: @grey-30,
		@color-active: @grey-10
	);

}


.icon-caret-n-dual {
	.mxn-icon-pe(
		@icon: caret-n,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: caret-n,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-caret-s-dual {
	.mxn-icon-pe(
		@icon: caret-s,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: caret-s,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-caret-e-dual {
	.mxn-icon-pe(
		@icon: caret-e,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: caret-e,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-caret-w-dual {
	.mxn-icon-pe(
		@icon: caret-w,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18)
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: caret-w,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-chat-dual {
	.mxn-icon-pe(
		@icon: chat,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18),
		@size: 40px
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: chat,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}


.icon-phone-dual {
	.mxn-icon-pe(
		@icon: phone,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18),
		@size: 40px
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: phone,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-mail-dual {
	.mxn-icon-pe(
		@icon: mail,
		@color-base: @grey-30,
		@color-hover: darken(@grey-30, 10),
		@color-active: darken(@grey-30, 18),
		@size: 40px
	);

	.inverse-colors & {
		.mxn-icon-pe-color(
			@icon: mail,
			@color-base: @white,
			@color-hover: @tal-green,
			@color-active: @tal-green-dark
		);
	}
}

.icon-tal-logo {
	.mxn-icon(brand-logo, @tal-green, 60px);
}

.icon-cross {
	.mxn-icon(cross, tomato);
}

.icon-tick {
	.mxn-icon(tick, skyblue);
}

.icon-plus {
	.mxn-icon(plus, @grey-30);
	.inverse-colors & {.mxn-icon-color(plus, @white);}
}

.icon-minus {
	.mxn-icon(minus, @grey-30);
	.inverse-colors & {.mxn-icon-color(minus, @white);}
}

.icon-arrow-n {
	.mxn-icon(arrow-n, @grey-30);
	.inverse-colors & {.mxn-icon-color(arrow-n, @white);}
}

.icon-arrow-w {
	.mxn-icon(arrow-w, @grey-30);
	.inverse-colors & {.mxn-icon-color(arrow-w, @white);}
}

.icon-arrow-e {
	.mxn-icon(arrow-e, @grey-30);
	.inverse-colors & {.mxn-icon-color(arrow-e, @white);}
}

.icon-arrow-s {
	.mxn-icon(arrow-s, @grey-30);
	.inverse-colors & {.mxn-icon-color(arrow-s, @white);}
}

.icon-caret-n {
	.mxn-icon(caret-n, @grey-30);
	.inverse-colors & {.mxn-icon-color(caret-n, @white);}
}

.icon-caret-s {
	.mxn-icon(caret-s, @grey-30);
	.inverse-colors & {.mxn-icon-color(caret-s, @white);}
}

.icon-caret-e {
	.mxn-icon(caret-e, @grey-30);
	.inverse-colors & {.mxn-icon-color(caret-e, @white);}
}

.icon-caret-w {
	.mxn-icon(caret-w, @grey-30);
	.inverse-colors & {.mxn-icon-color(caret-w, @white);}
}

.icon-chat {
	.mxn-icon(chat, @grey-30, 40px);
	.inverse-colors & {.mxn-icon-color(chat, @white);}
}

.icon-phone {
	.mxn-icon(phone, @grey-30, 40px);
	.inverse-colors & {.mxn-icon-color(phone, @white);}
}

.icon-mail {
	.mxn-icon(mail, @grey-30, 40px);
	.inverse-colors & {.mxn-icon-color(mail, @white);}
}

.abs-icon-bubble-tail{
	background-image: svgicon(bubble-tail, @grey-30);
	background-repeat: no-repeat;
}